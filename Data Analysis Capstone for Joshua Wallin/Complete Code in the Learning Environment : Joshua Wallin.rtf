{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww14620\viewh14960\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
\
species = pd.read_csv('species_info.csv')\
print species.head(5)\
\
species_count = species.scientific_name.nunique()\
\
species_type = species.category.unique()\
\
conservation_statuses = species.conservation_status.unique()\
\
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()\
print conservation_counts.head(5)\
\
species.fillna('No Intervention', inplace = True)\
\
conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()\
print conservation_counts_fixed\
\
\'97\
\
import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
\
species = pd.read_csv('species_info.csv')\
\
species.fillna('No Intervention', inplace = True)\
\
protection_counts = species.groupby('conservation_status')\\\
    .scientific_name.nunique().reset_index()\\\
    .sort_values(by='scientific_name')\
\
plt.figure(figsize=(10, 4))\
ax = plt.subplot()\
plt.bar(range(len(protection_counts)),\
        protection_counts.scientific_name.values)\
ax.set_xticks(range(len(protection_counts)))\
ax.set_xticklabels(protection_counts.conservation_status.values)\
plt.ylabel("Number of Species")\
plt.title("Conservation Status by Species")\
labels = [i.get_text() for i in ax.get_xticklabels()]\
plt.show()\
\
\'97\
\
import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
\
species = pd.read_csv('species_info.csv')\
\
species.fillna('No Intervention', inplace = True)\
\
species["is_protected"] = species.conservation_status != "No Intervention"\
\
category_counts = species.groupby(["category", "is_protected"]).scientific_name.nunique().reset_index()\
print category_counts.head(5)\
\
category_pivot = category_counts.pivot(\
	columns = "is_protected",\
	index = "category",\
	values = "scientific_name"\
).reset_index()\
print category_pivot\
\
category_pivot.columns = ["category", "not_protected", "protected"]\
\
category_pivot["percent_protected"] = category_pivot.protected / (category_pivot.protected + category_pivot.not_protected)\
print category_pivot\
\
\'97\
\
import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
from scipy.stats import chi2_contingency\
\
contingency = [[30, 146], [75, 413]]\
\
chi2, pval, dof, expected = chi2_contingency(contingency)\
print pval\
\
c2 = [[5, 73], [30, 146]]\
chi2, pval, dof, expected = chi2_contingency(c2)\
pval_reptile_mammal = pval\
print pval_reptile_mammal\
\
c3 = [[7, 72], [11, 115]]\
chi2, pval, dof, expected = chi2_contingency(c3)\
pval_amphibian_fish = pval\
print pval_amphibian_fish\
\
c4 = [[5, 328], [46, 4216]]\
chi2, pval, dof, expected = chi2_contingency(c4)\
pval_nvplant_vplant = pval\
print pval_nvplant_vplant\
\
\'97\
\
import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
\
species = pd.read_csv('species_info.csv')\
species.fillna('No Intervention', inplace = True)\
species['is_protected'] = species.conservation_status != 'No Intervention'\
\
observations = pd.read_csv('observations.csv')\
#print observations.head(5)\
\
species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)\
\
species_is_sheep = species[species.is_sheep]\
\
sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]\
\
sheep_observations = observations.merge(sheep_species)\
#print sheep_observations.head(5)\
\
obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()\
print obs_by_park\
\
\'97\
\
import codecademylib\
import pandas as pd\
from matplotlib import pyplot as plt\
\
species = pd.read_csv('species_info.csv')\
species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)\
sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]\
\
observations = pd.read_csv('observations.csv')\
\
sheep_observations = observations.merge(sheep_species)\
\
obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()\
\
plt.figure(figsize=(16,4))\
ax = plt.subplot()\
plt.bar(range(len(obs_by_park)), obs_by_park.observations.values)\
ax.set_xticks(range(len(obs_by_park)))\
ax.set_xticklabels(obs_by_park.park_name)\
plt.ylabel("Number of Observations")\
plt.title("Observations of Sheep per Week")\
plt.show()\
\
\'97\
\
baseline = 15\
minimum_detectable_effect = 33\
#100*5/15=33.3\
sample_size_per_variant = 890\
yellowstone_weeks_observing = 1.75\
#890/507=1.75\
bryce_weeks_observing =3.56 \
#890/250=3.56}